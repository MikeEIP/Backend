FORMAT: 1A
HOST: https://mike.arrogant.space/v1

# Mike

Official Mike API.

## Authentication [/login]
Exchange credentials for `access_token`. Supported types:

+ `client_credentials`

### Exchange credentials for token [POST]
+ Request (application/json)
    + Attributes (OAuth grant request)

+ Response 200 (application/json)
    + Attributes (OAuth valid response)


## User Info [/user/{username}]

+ Request
    + Headers

            Authentication: Bearer JWT

+ Parameters
    + username (string) - Unique identifier (pseudo) of the user
        + Default: `theSnoop`

### Get user Info [GET]

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)
    
        Forbidden to access this user

### Delete user [DELETE]

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## My User Info [/user/me]

+ Request
    + Headers

            Authentication: Bearer JWT


### Get my Info [GET]

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


### Update my info [PUT]

+ Request (application/json)
    + Attributes (UserInfo)

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Delete me [DELETE]

+ Response 200 (application/json)

        Ok

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## General User Info [/user]

### Get all user Info [GET]

Restricted to admin only

+ Request
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (array)
        + (UserInfo)
        + (UserInfo)

+ Response 401 (plain/text)

        Forbidden

### Create account [POST]

+ Request (application/json)
    + Attributes (UserInfo)
        + password: thePass (string)

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 401 (plain/text)

        Forbidden


## Friends [/friends]

+ Request
    + Headers

            Authentication: Bearer JWT


### Get my friends [GET]

+ Response 200 (application/json)
    + Attributes (array)
        +Attributes (UserInfo)
        +Attributes (UserInfo)
        +Attributes (UserInfo)

+ Response 401 (plain/text)

        Forbidden to access this user


### Add a friend [PUT]

+ Request (application/json)
    + Attributes
        + user: dimitri (string)

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Delete a friend [DELETE]

+ Request (application/json)
    + Attributes
        + user: dimitri (string)

+ Response 200 (application/json)

        Ok

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## Trainings [/training]

+ Request
    + Headers

            Authentication: Bearer JWT

### Get Trainings [GET]

+ Response 200 (application/json)
    + Attributes (array)
        + (TrainingInfo)
        + (TrainingInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Return Training [POST]

+ Request (application/json)
    + Attributes (TrainingInfo)

+ Response 200 (application/json)

+ Response 401 (plain/text)

        Forbidden


## Data Structures

### Error message
+ reason: User not found (string, required)

### UserInfo
+ username: theSnoop (string, required)
+ lastname: Dog (string, required)
+ firstname: Snoop (string, required)
+ email: snoopy_doggydoggy@weed.com (string, required)
+ birthday: `1992-11-11T08:40:51.620Z` (string, required)
+ country: France (string, optional)
+ city: Nice (string, optional)
+ language: fr_FR (string, required)
+ xp: 42 (number, required)
+ musclor: 542 (number, required)
+ profilPicture: dimitri_profil.png (string, optional)

### ExercicesInfo
+ exercise: pompe (string, required)
+ repetition: 10 (number, optional)
+ series: 4 (number, optional)
+ weight: 3 (number, optional)
+ difficulty: 6 (number, required)
+ finished: Yes (string, required)
+ time: 4:10 (string, required)
+ date: `2018-11-11T08:40:51.620Z` (string, required)
+ id: 1 (number, required)

###TrainingInfo
+ id: 25 (number, required)
+ exercices: ExercicesInfo, ExercicesInfo (array[ExercicesInfo], required)

### OAuth grant request (object)
+ username: theSnoop (string, required)
+ password: thePass (string, required)

### OAuth valid response (object)
+ access_token: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid JWT
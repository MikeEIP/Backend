FORMAT: 1A
HOST: https://mike.arrogant.space/v1

# Mike

Official Mike API.

## Authentication [/login]
Exchange credentials for `access_token`. Supported types:

+ `client_credentials`

### Exchange credentials for token [POST]
+ Request (application/json)
    + Attributes (OAuth grant request)

+ Response 200 (application/json)
    + Attributes (OAuth valid response)
    + Attributes (Server Info)


## User Info [/user/{username}]

+ Request
    + Headers
            Authorization: Bearer JWT

+ Parameters
    + username (string) - Unique identifier (pseudo) of the user
        + Default: `mike`

### Get user Info [GET]

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)
    
        Forbidden to access this user

### Delete user [DELETE]

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## My User Info [/user/me]

+ Request
    + Headers

            Authentication: Bearer JWT


### Get my Info [GET]

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


### Update my info [PUT]

+ Request (application/json)
    + Attributes (UserInfo)

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Delete me [DELETE]

+ Response 200 (application/json)

        Ok

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## General User Info [/user]

### Get all user Info [GET]

Restricted to admin only

+ Request
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (array)
        + (UserInfo)
        + (UserInfo)

+ Response 401 (plain/text)

        Forbidden to access this user

### Create account [POST]

+ Request (application/json)
    + Attributes (UserInfo)
        + password: thePass (string)

+ Response 200 (application/json)
    + Attributes (UserInfo)

+ Response 401 (plain/text)

        Forbidden to access this user

## Survey [/survey]

+ Request
    + Headers
            Authentication: Bearer JWT

### Post Survey [POST]

+ Request (application/json)
    + Attributes (Survey Info)

+ Response 200 (application/json)

+ Response 401 (plain/text)

        Forbidden to access this user

## Friends [/friends]

+ Request
    + Headers
            Authentication: Bearer JWT


### Get my friends [GET]

+ Response 200 (application/json)
    + Attributes (array)
        + Attributes (UserInfo)
        + Attributes (UserInfo)
        + Attributes (UserInfo)
        
+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


### Add a friend [PUT]

+ Request (application/json)
    + Attributes
        + username: dimitri (string)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Delete a friend [DELETE]

+ Request (application/json)
    + Attributes
        + username: dimitri (string)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user
        
## Friends Requests [/friends/requests]

+ Request
    + Headers
            Authentication: Bearer JWT
            
### Get Requests [GET]

+ Response 200 (application/json)
    + Attributes (array)
        + Attributes (UserInfo)
        + Attributes (UserInfo)
        + Attributes (UserInfo)
        
+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Accept Request [POST]

+ Request (application/json)
    + Attributes
        + username: dimitri (string)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

### Reject Request [DELETE]

+ Request (application/json)
    + Attributes
        + username: dimitri (string)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)



## All Exercises [/exercises/all]

+ Request
    + Headers

            Authentication: Bearer JWT

### Get all Exercises [GET]

+ Response 200 (application/json)
    + Attributes (array)
        + (ExerciseInfo)
        + (ExerciseInfo)

+ Response 401 (plain/text)

        Not logged
        
## Exercise [/exercises/{exercise_id}]

+ Request
    + Headers

            Authentication: Bearer JWT

### Get exercise [GET]

+ Response 200 (application/json)
    + Attributes (ExerciseInfo)

+ Response 401 (plain/text)

        Not logged
        
### Delete exercise [POST]
Admin only

+ Response 200 (application/json)

+ Response 401 (plain/text)

        Not logged
        
## General Exercise [/exercises/]

+ Request
    + Headers

            Authentication: Bearer JWT

### Create exercise [POST]
Admin only

+ Response 200 (application/json)
    + Attributes (ExerciseInfo)

+ Response 401 (plain/text)

        Not logged


## Trainings [/training]

+ Request
    + Headers

            Authentication: Bearer JWT

### Get Trainings [GET]

+ Response 200 (application/json)
    + Attributes (TrainingInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Delete Training [DELETE]

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

## Trainings Feedback [/trainings/feedback]

+ Request
    + Headers
            Authentication: Bearer JWT

### Post feedback [POST]

+ Response 200 (application/json)
    + Attributes (FeedbackInfo)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## Objectives [/objectives]

+ Request
    + Headers

            Authentication: Bearer JWT

### Get objectives [GET]

+ Response 200 (application/json)
    + Attributes (array)
        + (Goals Info)
        + (Goals Info)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

## Manage my Objectives [/objectives/{objective_id}]

+ Request
    + Headers

            Authentication: Bearer JWT

### Subscribe to Objective [POST]

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

### Unsubscribe to Objective [DELETE]

+ Request (application/json)

+ Response 200 (application/json)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user

## View my Objectives [/objectives/me]

+ Request
    + Headers
            Authentication: Bearer JWT

### View subscribed Objective [GET]

+ Response 200 (application/json)
    + Attributes (Goals Info)

+ Response 404 (application/json)
    + Attributes (Error message)

+ Response 401 (plain/text)

        Forbidden to access this user


## Data Structures

### Error message
+ reason: User not found (string, required)

### Server Info
+ pictureBaseUrl: https://cdn.mike.arrogant.space (string, required)
+ latestAndroidVersion: 1.0.5.2 (string, required)
+ latestIOSVersion: 1.0.4.8 (string, required)
+ needUpdate: boolean (string, required)

### UserInfo
+ username: mike (string, required)
+ lastname: Mike (string, required)
+ firstname: Doggy (string, required)
+ email: jean.claude@gmail.com (string, required)
+ birthday: `1992-11-11T08:40:51.620Z` (string, required)
+ country: France (string, optional)
+ city: Nice (string, optional)
+ language: fr_FR (string, required)
+ xp: 42 (number, required)
+ musclor: 542 (number, required)
+ profilPicture: euorro478473408fojhf38 (string, optional)

### Survey Info
+ weight: 70 (number, required)
+ height: 170 (number, required)
+ sportPerWeek: 2 (number, required)

### ExerciseInfo
+ name: pompe (string, required)
+ description: Do {FACTOR} pompes (string, optional)
+ requirements: basictraining, goldpass (array[string], optional)
+ series: 5 (number, required)
+ repetitions: 5 (number, required)
+ tags: endurance, sprint (array[string], optional)

###TrainingInfo
+ id: 25 (number, required)
+ exercices: ExerciseInfo, ExerciseInfo (array[ExerciseInfo], required)

###FeedbackInfo
+ curentTrainingID: 1029eys (string, required)
+ cost: 1
+ difficulty: [0.5, 0, 0.3, 0.2, 1] (array[number], required)
+ feeling: [0.5, 0, 0.3, 0.2, 1] (array[number], required)

###Goals Info
+ id: 12 (number, required)
+ name: Cardio (string, required)
+ description: Cardio help you to ... bla bla bla (string, required)
+ tags: musculation, cardio (array[string], required)

###Challenge League Info
+ id: 4452 (number, required)
+ title: Cardio Challenge (string, required)
+ desc: "Do 50 push ups" (string, required)
+ pictureUrl: /pictures/challenges/cardio.png (string, required)

###Leagues Info
+ id: 122465 (number, required)
+ members: UserInfo, UserInfo (array[UserInfo], required)
+ title: TiboInShape Bands (string, required)
+ points: 125 (number, required)
+ rank: 12 (number, required)
+ maxMembers: 30 (number, required)
+ challenge: Challenge League Info (Challenge League Info, required)

### OAuth grant request (object)
+ username: mike (string, required)
+ password: password (string, required)

### OAuth valid response (object)
+ access_token: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid JWT